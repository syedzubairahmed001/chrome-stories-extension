[{"D:\\projects\\chrome-stories\\src\\context\\globalContext.js":"1","D:\\projects\\chrome-stories\\src\\components\\Header\\Header.component.jsx":"2","D:\\projects\\chrome-stories\\src\\App.js":"3","D:\\projects\\chrome-stories\\src\\services\\firebase.js":"4","D:\\projects\\chrome-stories\\src\\context\\userContext.js":"5","D:\\projects\\chrome-stories\\src\\components\\GoogleSigninBtn\\GoogleSigninBtn.component.jsx":"6","D:\\projects\\chrome-stories\\src\\index.js":"7","D:\\projects\\chrome-stories\\src\\containers\\CreateStory\\CreateStory.container.jsx":"8","D:\\projects\\chrome-stories\\src\\constants\\pages.js":"9","D:\\projects\\chrome-stories\\src\\components\\StoryIcon\\StoryIcon.component.jsx":"10","D:\\projects\\chrome-stories\\src\\reportWebVitals.js":"11","D:\\projects\\chrome-stories\\src\\containers\\Auth\\Auth.container.jsx":"12","D:\\projects\\chrome-stories\\src\\containers\\Home\\Home.container.jsx":"13","D:\\projects\\chrome-stories\\src\\components\\Loader\\Loader.compoent.jsx":"14","D:\\projects\\chrome-stories\\src\\services\\axios.js":"15","D:\\projects\\chrome-stories\\src\\containers\\ViewStory\\ViewStory.component.jsx":"16","D:\\projects\\chrome-stories\\src\\components\\SetUser\\SetUser.component.jsx":"17","D:\\projects\\chrome-stories\\src\\containers\\About\\About.container.jsx":"18","D:\\projects\\chrome-stories\\src\\helpers\\auth.js":"19"},{"size":603,"mtime":1611686188000,"results":"20","hashOfConfig":"21"},{"size":3711,"mtime":1611832118000,"results":"22","hashOfConfig":"21"},{"size":1699,"mtime":1611814104000,"results":"23","hashOfConfig":"21"},{"size":1049,"mtime":1611495836000,"results":"24","hashOfConfig":"21"},{"size":679,"mtime":1611677900000,"results":"25","hashOfConfig":"21"},{"size":3501,"mtime":1611826684000,"results":"26","hashOfConfig":"21"},{"size":744,"mtime":1611427224000,"results":"27","hashOfConfig":"21"},{"size":2846,"mtime":1611828750000,"results":"28","hashOfConfig":"21"},{"size":157,"mtime":1611814056000,"results":"29","hashOfConfig":"21"},{"size":1404,"mtime":1611812194000,"results":"30","hashOfConfig":"21"},{"size":362,"mtime":1611127282000,"results":"31","hashOfConfig":"21"},{"size":1449,"mtime":1611831780000,"results":"32","hashOfConfig":"21"},{"size":4377,"mtime":1611842022000,"results":"33","hashOfConfig":"21"},{"size":175,"mtime":1611556052000,"results":"34","hashOfConfig":"21"},{"size":338,"mtime":1611828386000,"results":"35","hashOfConfig":"21"},{"size":1366,"mtime":1611675530000,"results":"36","hashOfConfig":"21"},{"size":625,"mtime":1611682280000,"results":"37","hashOfConfig":"21"},{"size":1735,"mtime":1611831768000,"results":"38","hashOfConfig":"21"},{"size":1053,"mtime":1611828808000,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},"9eo3e2",{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"43"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"43"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"43"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"43"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"43"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"43"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"D:\\projects\\chrome-stories\\src\\context\\globalContext.js",["93"],"import React from \"react\";\r\nimport pages from \"../constants/pages\";\r\nimport firebase from \"../services/firebase\";\r\n\r\nexport const GlobalContext = React.createContext();\r\n\r\nexport const GlobalContextProvider = (props) => {\r\n  const [globalContext, setGlobalContext] = React.useState({\r\n    currentPage: pages.Home,\r\n    loading: false,\r\n    stories: [],\r\n    currentStoryIndex: null,\r\n    currentStoriesOffset: 0,\r\n    currentStoriesLimit: 0,\r\n  });\r\n\r\n  return (\r\n    <GlobalContext.Provider value={{ globalContext, setGlobalContext }}>\r\n      {props.children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};\r\n",["94","95"],"D:\\projects\\chrome-stories\\src\\components\\Header\\Header.component.jsx",["96","97"],"import React from \"react\";\r\n\r\nimport { UserContext } from \"../../context/userContext\";\r\nimport { GlobalContext } from \"../../context/globalContext\";\r\nimport logo from \"../../images/logos/logo_100x100.png\";\r\nimport styles from \"./Header.module.css\";\r\nimport pages from \"../../constants/pages\";\r\n\r\nconst Header = (props) => {\r\n  const { userContext, setUserContext, resetUserContext } = React.useContext(\r\n    UserContext\r\n  );\r\n  const [menuActive, setMenuActive] = React.useState(false);\r\n  const { globalContext, setGlobalContext } = React.useContext(GlobalContext);\r\n  React.useEffect(() => {\r\n    setMenuActive(false);\r\n  }, []);\r\n\r\n  const onLoginClick = () => {\r\n    setGlobalContext((prev) => ({ ...prev, currentPage: pages.Auth }));\r\n  };\r\n  const onProfileClick = () => {\r\n    setMenuActive((prev) => !prev);\r\n    // setGlobalContext((prev) => ({ ...prev, currentPage: pages.CreateStory }));\r\n  };\r\n  const logout = () => {\r\n    setGlobalContext((prev) => ({ ...prev, currentPage: pages.HOME }));\r\n    const localUser = JSON.parse(localStorage.getItem(\"user\"));\r\n    if (localUser && localUser.story) {\r\n      const storiesToSave = {\r\n        _fieldsProto: {\r\n          email: {\r\n            stringValue: localUser.email,\r\n          },\r\n          name: {\r\n            stringValue: localUser.name,\r\n          },\r\n          photoUrl: {\r\n            stringValue: localUser.profilePicture,\r\n          },\r\n          story: {\r\n            stringValue: localUser.story,\r\n          },\r\n        },\r\n      };\r\n      setGlobalContext((prev) => ({\r\n        ...prev,\r\n        stories: [...prev.stories, storiesToSave],\r\n      }));\r\n    }\r\n    localStorage.removeItem(\"user\");\r\n    localStorage.removeItem(\"id-token\");\r\n    localStorage.removeItem(\"r\");\r\n    localStorage.removeItem(\"id-exp\");\r\n    resetUserContext();\r\n  };\r\n  const userProfilePicture = userContext.user.profilePicture;\r\n  return (\r\n    <header className={`flex flex-space-between flex-center ${styles.header}`}>\r\n      <div className={`flex flex-center  pl-5`}>\r\n        <img src={logo} alt=\"logo\" className={`${styles.logo}`} />\r\n        <div className={`ml-5`}>\r\n          <h3 className={`${styles.heading} text-secondary `}>Stories</h3>\r\n          {/* <p className=\"text-small\">\r\n            Create by <a href=\"https://twitter.com/_syed_zubair\">Zubair</a>\r\n          </p> */}\r\n        </div>\r\n      </div>\r\n      <div className=\"pr-5\">\r\n        {userProfilePicture ? (\r\n          <div className={` menu-wrapper`}>\r\n            <ul className={` ${menuActive ? \"active\" : \"\"} menu-list`}>\r\n              <li\r\n                onClick={() => {\r\n                  setMenuActive((prev) => !prev);\r\n                  setGlobalContext((prev) => ({\r\n                    ...prev,\r\n                    currentPage: pages.CreateStory,\r\n                  }));\r\n                }}\r\n              >\r\n                My Story\r\n              </li>\r\n              <li\r\n                onClick={() => {\r\n                  setMenuActive((prev) => !prev);\r\n                  setGlobalContext((prev) => ({\r\n                    ...prev,\r\n                    currentPage: pages.About,\r\n                  }));\r\n                }}\r\n              >\r\n                About\r\n              </li>\r\n              <li onClick={logout}>Logout</li>\r\n            </ul>\r\n            <img\r\n              className={`${styles.profilePicture}`}\r\n              src={userProfilePicture}\r\n              alt=\"profile\"\r\n              onClick={onProfileClick}\r\n            />\r\n          </div>\r\n        ) : (\r\n          <div className={`btn-tertiary`} onClick={onLoginClick}>\r\n            Login\r\n          </div>\r\n        )}\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","D:\\projects\\chrome-stories\\src\\App.js",["98","99","100"],"import React from \"react\";\n\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Header from \"./components/Header/Header.component\";\nimport Auth from \"./containers/Auth/Auth.container\";\nimport Home from \"./containers/Home/Home.container\";\nimport About from \"./containers/About/About.container\";\nimport CreateStory from \"./containers/CreateStory/CreateStory.container\";\nimport ViewStory from \"./containers/ViewStory/ViewStory.component\";\nimport pages from \"./constants/pages\";\nimport firebase from \"./services/firebase\";\nimport Loader from \"./components/Loader/Loader.compoent\";\nimport SetUser from \"./components/SetUser/SetUser.component\";\n\nimport { UserContext } from \"./context/userContext\";\nimport { GlobalContext, GlobalContextProvider } from \"./context/globalContext\";\nfunction App() {\n  React.useEffect(() => {\n    const user = firebase.auth().currentUser;\n    console.log(user);\n  }, []);\n  const { globalContext } = React.useContext(GlobalContext);\n  const renderPage = () => {\n    const currentPage = globalContext.currentPage;\n    console.log(globalContext.currentPage);\n    switch (currentPage) {\n      case pages.Home:\n        return <Home />;\n      case pages.Auth:\n        return <Auth />;\n      case pages.About:\n        return <About />;\n      case pages.CreateStory:\n        return <CreateStory />;\n      case pages.ViewStory:\n        return <ViewStory />;\n      default:\n        return <Home />;\n    }\n  };\n  return (\n    <div className=\"App\">\n      <SetUser />\n      {/* <Header /> */}\n      {globalContext.currentPage === pages.ViewStory ? \"\" : <Header />}\n      {globalContext.loading && <Loader />}\n      <main>{renderPage()}</main>\n    </div>\n  );\n}\n\nexport default App;\n",["101","102"],"D:\\projects\\chrome-stories\\src\\services\\firebase.js",[],"D:\\projects\\chrome-stories\\src\\context\\userContext.js",[],"D:\\projects\\chrome-stories\\src\\components\\GoogleSigninBtn\\GoogleSigninBtn.component.jsx",["103","104","105"],"import React from \"react\";\r\n\r\nimport google_logo from \"../../images/google_logo.png\";\r\nimport styles from \"./GoogleSigninBtn.module.css\";\r\nimport { signInWithGoogle, auth } from \"../../services/firebase\";\r\nimport { UserContext } from \"../../context/userContext\";\r\nimport { GlobalContext } from \"../../context/globalContext\";\r\nimport pages from \"../../constants/pages\";\r\nimport axios from \"../../services/axios\";\r\n\r\nconst GoogleSigninBtn = (props) => {\r\n  const { userContext, setUserContext } = React.useContext(UserContext);\r\n  const { globalContext, setGlobalContext } = React.useContext(GlobalContext);\r\n  const onSigninClick = async () => {\r\n    try {\r\n      setGlobalContext((prev) => ({ ...prev, loading: true }));\r\n      const googleRes = await signInWithGoogle();\r\n      const googleResJson = JSON.parse(JSON.stringify(googleRes.user));\r\n      console.log(googleResJson);\r\n      const refreshToken = googleResJson.stsTokenManager.refreshToken;\r\n      const idToken = googleResJson.stsTokenManager.accessToken;\r\n      const apiKey = googleResJson.stsTokenManager.apiKey;\r\n      const idExp = googleResJson.stsTokenManager.expirationTime;\r\n      console.log(idToken);\r\n      localStorage.setItem(\"id-token\", idToken);\r\n      localStorage.setItem(\"id-exp\", idExp);\r\n      localStorage.setItem(\"r\", refreshToken);\r\n      localStorage.setItem(\"ak\", apiKey);\r\n      let userData = await axios.get(\"/getUser\", {\r\n        headers: {\r\n          Authorization: idToken,\r\n        },\r\n      });\r\n      if (userData.data) {\r\n        let userDataJson = userData.data.data._fieldsProto;\r\n        if (!userDataJson) {\r\n          setUserContext((prev) => ({\r\n            ...prev,\r\n            user: {\r\n              ...prev.user,\r\n              name: googleResJson.displayName,\r\n              email: googleResJson.email,\r\n              profilePicture: googleResJson.photoUrl,\r\n              story: \"\",\r\n            },\r\n          }));\r\n          localStorage.setItem(\r\n            \"user\",\r\n            JSON.stringify({\r\n              name: googleResJson.displayName,\r\n              email: googleResJson.email,\r\n              profilePicture: googleResJson.photoUrl,\r\n              story: \"\",\r\n            })\r\n          );\r\n        } else {\r\n          setUserContext((prev) => ({\r\n            ...prev,\r\n            user: {\r\n              ...prev.user,\r\n              name: userDataJson.name.stringValue,\r\n              email: userDataJson.email.stringValue,\r\n              profilePicture: userDataJson.photoUrl.stringValue,\r\n              story: userDataJson.story.stringValue,\r\n            },\r\n          }));\r\n          localStorage.setItem(\r\n            \"user\",\r\n            JSON.stringify({\r\n              name: userDataJson.name.stringValue,\r\n              email: userDataJson.email.stringValue,\r\n              profilePicture: userDataJson.photoUrl.stringValue,\r\n              story: userDataJson.story.stringValue,\r\n            })\r\n          );\r\n        }\r\n      }\r\n      setGlobalContext((prev) => ({\r\n        ...prev,\r\n        loading: false,\r\n        currentPage: pages.Home,\r\n      }));\r\n    } catch (err) {\r\n      setGlobalContext((prev) => ({ ...prev, loading: false }));\r\n      console.log(err);\r\n    }\r\n  };\r\n  return (\r\n    <div {...props} className={`${styles.button}`} onClick={onSigninClick}>\r\n      <img className={`${styles.logo}`} src={google_logo} alt=\"google signin\" />\r\n      <p className={`${styles.text}`}>Sign in with Google</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GoogleSigninBtn;\r\n",["106","107"],"D:\\projects\\chrome-stories\\src\\index.js",[],"D:\\projects\\chrome-stories\\src\\containers\\CreateStory\\CreateStory.container.jsx",["108","109"],"import React from \"react\";\r\n\r\nimport axios from \"../../services/axios\";\r\nimport styles from \"./CreateStory.module.css\";\r\nimport { GlobalContext } from \"../../context/globalContext\";\r\nimport { UserContext } from \"../../context/userContext\";\r\nimport pages from \"../../constants/pages\";\r\nimport { getAccessToken } from \"../../helpers/auth\";\r\n\r\nconst CreateStory = (props) => {\r\n  const textareaRef = React.useRef();\r\n  const { userContext, setUserContext } = React.useContext(UserContext);\r\n  const [storyText, setStoryText] = React.useState(\"\");\r\n  React.useEffect(() => {\r\n    if (userContext.user.story) {\r\n      setStoryText(userContext.user.story);\r\n    }\r\n    textareaRef.current.focus();\r\n  }, []);\r\n  const { globalContext, setGlobalContext } = React.useContext(GlobalContext);\r\n\r\n  const handleTextChange = (e) => {\r\n    const text = e.target.value;\r\n    if (text.length < 300) {\r\n      setStoryText(text);\r\n    }\r\n  };\r\n  const handlePostStory = async (e) => {\r\n    setGlobalContext((prev) => ({ ...prev, loading: true }));\r\n    const accessToken = await getAccessToken();\r\n    const text = storyText;\r\n    axios\r\n      .post(\r\n        \"/createStory\",\r\n        { text: text },\r\n        { headers: { Authorization: accessToken } }\r\n      )\r\n      .then((res) => {\r\n        setGlobalContext((prev) => ({\r\n          ...prev,\r\n          loading: false,\r\n          currentPage: pages.Home,\r\n        }));\r\n        const localUser = JSON.parse(localStorage.getItem(\"user\"));\r\n        if (localUser) {\r\n          localStorage.setItem(\r\n            \"user\",\r\n            JSON.stringify({ ...localUser, story: storyText })\r\n          );\r\n        }\r\n        setUserContext((prev) => ({\r\n          ...prev,\r\n          user: { ...prev.user, story: storyText },\r\n        }));\r\n      })\r\n      .catch((err) => {\r\n        setGlobalContext((prev) => ({ ...prev, loading: false }));\r\n      });\r\n  };\r\n  const handleloseBtnClick = () => {\r\n    setGlobalContext((prev) => ({ ...prev, currentPage: pages.Home }));\r\n  };\r\n  return (\r\n    <div className={`${styles.container}`}>\r\n      <div\r\n        className={`${styles.header} flex flex-space-between pt-10 pl-10 pr-10 pb-10`}\r\n      >\r\n        <button\r\n          className={`btn-tertiary closeBtn`}\r\n          onClick={handleloseBtnClick}\r\n        >\r\n          <div className={`btn-tertiary close`}></div>\r\n        </button>\r\n        <button className=\"btn-primary\" onClick={handlePostStory}>\r\n          Post\r\n        </button>\r\n      </div>\r\n      <div className={`pl-10 pr-10`}>\r\n        <textarea\r\n          type=\"text\"\r\n          rows=\"14\"\r\n          ref={textareaRef}\r\n          placeholder=\"Type something...\"\r\n          value={storyText}\r\n          onChange={handleTextChange}\r\n          className={`${styles.storyInput}`}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateStory;\r\n","D:\\projects\\chrome-stories\\src\\constants\\pages.js",[],"D:\\projects\\chrome-stories\\src\\components\\StoryIcon\\StoryIcon.component.jsx",["110"],"import React from \"react\";\r\n\r\nimport styles from \"./StoryIcon.module.css\";\r\nimport pages from \"../../constants/pages\";\r\nimport { GlobalContext } from \"../../context/globalContext\";\r\n\r\nconst StoryIcon = (props) => {\r\n  const [storyLoading, setStoryLoading] = React.useState(false);\r\n  const { globalContext, setGlobalContext } = React.useContext(GlobalContext);\r\n  let { photoUrl, title, index } = props;\r\n  title = props.yourStory ? title : title.split(\" \")[0];\r\n\r\n  const handleStoryClick = () => {\r\n    if (props.yourStory) {\r\n      setGlobalContext((prev) => ({ ...prev, currentPage: pages.CreateStory }));\r\n    } else {\r\n      setStoryLoading(true);\r\n      setTimeout(() => {\r\n        setGlobalContext((prev) => ({\r\n          ...prev,\r\n          currentStoryIndex: index,\r\n          currentPage: pages.ViewStory,\r\n        }));\r\n      }, 500);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <div\r\n        className={`text-center inline-block ${styles.container} `}\r\n        onClick={handleStoryClick}\r\n      >\r\n        <div\r\n          className={`${styles.imageWrapper} ${\r\n            storyLoading ? styles.loading : \"\"\r\n          } ${props.yourStory ? styles.yourStoryWrapper : \"\"}`}\r\n        >\r\n          <img className={`${styles.image}`} src={photoUrl} alt=\"profile\" />\r\n        </div>\r\n        <p className={`${styles.title}`}>{title}</p>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StoryIcon;\r\n","D:\\projects\\chrome-stories\\src\\reportWebVitals.js",[],["111","112"],"D:\\projects\\chrome-stories\\src\\containers\\Auth\\Auth.container.jsx",["113"],"import React from \"react\";\r\n\r\nimport styles from \"./Auth.module.css\";\r\nimport logo from \"../../images/logos/logo_100x100.png\";\r\nimport GoogleSigninBtn from \"../../components/GoogleSigninBtn/GoogleSigninBtn.component\";\r\nimport { GlobalContext } from \"../../context/globalContext\";\r\nimport pages from \"../../constants/pages\";\r\n\r\nconst Auth = (props) => {\r\n  const { globalContext, setGlobalContext } = React.useContext(GlobalContext);\r\n\r\n  return (\r\n    <div className=\"flex flex-column h-100\">\r\n      <div className=\"p-10\">\r\n        <button\r\n          className={`btn-tertiary closeBtn`}\r\n          onClick={() =>\r\n            setGlobalContext((prev) => ({ ...prev, currentPage: pages.Home }))\r\n          }\r\n        >\r\n          <div className={`btn-tertiary close close-dark`}></div>\r\n        </button>\r\n      </div>\r\n      <div className=\"flex-1 mt-10 flex-column\">\r\n        <div className={`text-center mb-5`}>\r\n          <img src={logo} alt=\"logo\" className={`${styles.logo}`} />\r\n          <h2 className={`text-primary font-big`}>Stories in Browser!</h2>\r\n        </div>\r\n        <div className={`text-center`}>\r\n          <p className={`text-secondary font-small`}>\r\n            Share and watch stories from people around the world while you\r\n            browse!\r\n          </p>\r\n        </div>\r\n        <div className={`flex-center`}>\r\n          <GoogleSigninBtn />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","D:\\projects\\chrome-stories\\src\\containers\\Home\\Home.container.jsx",["114","115","116","117","118"],"import React, { useContext } from \"react\";\r\n\r\nimport axios from \"../../services/axios\";\r\nimport Header from \"../../components/Header/Header.component\";\r\nimport sytles from \"./Home.module.css\";\r\nimport StoryIcon from \"../../components/StoryIcon/StoryIcon.component\";\r\nimport { GlobalContext } from \"../../context/globalContext\";\r\nimport { UserContext } from \"../../context/userContext\";\r\nimport { getAccessToken } from \"../../helpers/auth\";\r\n\r\nconst Home = (props) => {\r\n  const { globalContext, setGlobalContext } = React.useContext(GlobalContext);\r\n  const { userContext, setUserContext } = React.useContext(UserContext);\r\n  const [message, setMessage] = React.useState(null);\r\n\r\n  React.useEffect(() => {\r\n    if (globalContext.stories.length === 0) {\r\n      getStories();\r\n    } else {\r\n      let localUser = JSON.parse(localStorage.getItem(\"user\"));\r\n      if (localUser && localUser.email) {\r\n        const storiesToSave = globalContext.stories.filter((e) => {\r\n          return e._fieldsProto.email.stringValue !== localUser.email;\r\n        });\r\n        setGlobalContext((prev) => ({ ...prev, stories: storiesToSave }));\r\n      }\r\n    }\r\n  }, []);\r\n  const getStories = async () => {\r\n    setGlobalContext((prev) => ({ ...prev, loading: true }));\r\n    const accessToken = await getAccessToken();\r\n    axios\r\n      .post(\"/getStories\", {\r\n        offsetEmail:\r\n          (globalContext.stories &&\r\n            globalContext.stories.length > 0 &&\r\n            globalContext.stories[globalContext.stories.length - 1]._fieldsProto\r\n              .email.stringValue) ||\r\n          \"\",\r\n      })\r\n      .then((res) => {\r\n        const storyData = res.data.data;\r\n        const limit = storyData.length;\r\n        const offset = globalContext.currentStoriesOffset + limit;\r\n        if (!res.data.data) {\r\n          if (res.data.error) {\r\n            setMessage(res.data.error.msg);\r\n          } else {\r\n            setMessage(\"something went wrong\");\r\n          }\r\n          setGlobalContext((prev) => ({\r\n            ...prev,\r\n            loading: false,\r\n          }));\r\n        } else {\r\n          let localUser = JSON.parse(localStorage.getItem(\"user\"));\r\n          const storiesToSave = res.data.data.filter((e) => {\r\n            return (\r\n              e._fieldsProto.email.stringValue !==\r\n              (localUser && localUser.email)\r\n            );\r\n          });\r\n          if (globalContext.stories.length > 0) {\r\n            setGlobalContext((prev) => ({\r\n              ...prev,\r\n              loading: false,\r\n              stories: [...prev.stories, ...storiesToSave],\r\n              currentStoriesLimit: limit,\r\n              currentStoriesOffset: offset,\r\n            }));\r\n          } else {\r\n            setGlobalContext((prev) => ({\r\n              ...prev,\r\n              loading: false,\r\n              stories: storiesToSave,\r\n              currentStoriesLimit: limit,\r\n              currentStoriesOffset: offset,\r\n            }));\r\n          }\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setGlobalContext((prev) => ({ ...prev, loading: false }));\r\n        console.log(err);\r\n      });\r\n  };\r\n  const renderStories = () => {\r\n    const stories = globalContext.stories || [];\r\n\r\n    const storiesCards = stories.map((e, i) => {\r\n      const story = e._fieldsProto;\r\n      return (\r\n        <StoryIcon\r\n          key={i}\r\n          title={story.name.stringValue}\r\n          photoUrl={story.photoUrl.stringValue}\r\n          index={i}\r\n        />\r\n      );\r\n    });\r\n    return storiesCards;\r\n  };\r\n  return (\r\n    <div>\r\n      <div className={sytles.container}>\r\n        {userContext.user.email && (\r\n          <StoryIcon\r\n            title=\"Your Story\"\r\n            yourStory={true}\r\n            photoUrl={userContext.user.profilePicture}\r\n          />\r\n        )}\r\n        {globalContext.loading && globalContext.stories.length === 0 ? (\r\n          <div></div>\r\n        ) : (\r\n          renderStories()\r\n        )}\r\n        {globalContext.currentStoriesLimit >= 30 && (\r\n          <div className=\"text-center\">\r\n            <button className=\"btn-tertiary\" onClick={getStories}>\r\n              Load more\r\n            </button>\r\n          </div>\r\n        )}\r\n        {message && (\r\n          <p className=\"text-secondary font-small text-center\">{message}</p>\r\n        )}\r\n        {/*  */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","D:\\projects\\chrome-stories\\src\\components\\Loader\\Loader.compoent.jsx",[],"D:\\projects\\chrome-stories\\src\\services\\axios.js",[],"D:\\projects\\chrome-stories\\src\\containers\\ViewStory\\ViewStory.component.jsx",[],"D:\\projects\\chrome-stories\\src\\components\\SetUser\\SetUser.component.jsx",["119","120"],"import React from \"react\";\r\n\r\nimport { UserContext } from \"../../context/userContext\";\r\n\r\nconst SetUser = () => {\r\n  const { userContext, setUserContext } = React.useContext(UserContext);\r\n  React.useEffect(() => {\r\n    const userExists = JSON.parse(localStorage.getItem(\"user\"));\r\n    if (userExists) {\r\n      setUserContext((prev) => ({\r\n        ...prev,\r\n        user: {\r\n          name: userExists.name,\r\n          email: userExists.email,\r\n          profilePicture: userExists.profilePicture,\r\n          story: userExists.story,\r\n        },\r\n      }));\r\n    }\r\n  }, []);\r\n  return <></>;\r\n};\r\n\r\nexport default SetUser;\r\n","D:\\projects\\chrome-stories\\src\\containers\\About\\About.container.jsx",["121"],"import React from \"react\";\r\n\r\nimport { GlobalContext } from \"../../context/globalContext\";\r\nimport pages from \"../../constants/pages\";\r\n\r\nimport logo from \"../../images/logos/logo_100x100.png\";\r\n\r\nconst About = (props) => {\r\n  const { globalContext, setGlobalContext } = React.useContext(GlobalContext);\r\n\r\n  return (\r\n    <div className=\"flex flex-column h-100 \">\r\n      <div className=\"p-10\">\r\n        <button\r\n          className={`btn-tertiary closeBtn`}\r\n          onClick={() =>\r\n            setGlobalContext((prev) => ({ ...prev, currentPage: pages.Home }))\r\n          }\r\n        >\r\n          <div className={`btn-tertiary close close-dark`}></div>\r\n        </button>\r\n      </div>\r\n      <div className=\"p-10 flex flex-column flex-1\">\r\n        <div className=\"text-center\">\r\n          <img src={logo} alt=\"logo\" className=\"logo-big\" />\r\n          <p className=\"text-primary font-small font-bold  mb-10 mt-10\">\r\n            Created with ❤️ by <br />\r\n            <a\r\n              href=\"https://twitter.com/_syed_zubair\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n              className=\"link-1\"\r\n            >\r\n              Syed Zubair Ahmed\r\n            </a>\r\n          </p>\r\n          <p className=\"text-secondary font-medium font-vsmall\">\r\n            Got any suggestions or feedback? Reach out to me on{\" \"}\r\n            <a\r\n              href=\"https://twitter.com/_syed_zubair\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n              className=\"link-1\"\r\n            >\r\n              twitter\r\n            </a>\r\n            , I'll be very happy to hear from you!\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","D:\\projects\\chrome-stories\\src\\helpers\\auth.js",[],["122","123"],{"ruleId":"124","severity":1,"message":"125","line":3,"column":8,"nodeType":"126","messageId":"127","endLine":3,"endColumn":16},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"124","severity":1,"message":"132","line":10,"column":24,"nodeType":"126","messageId":"127","endLine":10,"endColumn":38},{"ruleId":"124","severity":1,"message":"133","line":14,"column":11,"nodeType":"126","messageId":"127","endLine":14,"endColumn":24},{"ruleId":"124","severity":1,"message":"134","line":3,"column":8,"nodeType":"126","messageId":"127","endLine":3,"endColumn":12},{"ruleId":"124","severity":1,"message":"135","line":16,"column":10,"nodeType":"126","messageId":"127","endLine":16,"endColumn":21},{"ruleId":"124","severity":1,"message":"136","line":17,"column":25,"nodeType":"126","messageId":"127","endLine":17,"endColumn":46},{"ruleId":"128","replacedBy":"137"},{"ruleId":"130","replacedBy":"138"},{"ruleId":"124","severity":1,"message":"139","line":5,"column":28,"nodeType":"126","messageId":"127","endLine":5,"endColumn":32},{"ruleId":"124","severity":1,"message":"140","line":12,"column":11,"nodeType":"126","messageId":"127","endLine":12,"endColumn":22},{"ruleId":"124","severity":1,"message":"133","line":13,"column":11,"nodeType":"126","messageId":"127","endLine":13,"endColumn":24},{"ruleId":"128","replacedBy":"141"},{"ruleId":"130","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":19,"column":6,"nodeType":"145","endLine":19,"endColumn":8,"suggestions":"146"},{"ruleId":"124","severity":1,"message":"133","line":20,"column":11,"nodeType":"126","messageId":"127","endLine":20,"endColumn":24},{"ruleId":"124","severity":1,"message":"133","line":9,"column":11,"nodeType":"126","messageId":"127","endLine":9,"endColumn":24},{"ruleId":"128","replacedBy":"147"},{"ruleId":"130","replacedBy":"148"},{"ruleId":"124","severity":1,"message":"133","line":10,"column":11,"nodeType":"126","messageId":"127","endLine":10,"endColumn":24},{"ruleId":"124","severity":1,"message":"149","line":1,"column":17,"nodeType":"126","messageId":"127","endLine":1,"endColumn":27},{"ruleId":"124","severity":1,"message":"150","line":4,"column":8,"nodeType":"126","messageId":"127","endLine":4,"endColumn":14},{"ruleId":"124","severity":1,"message":"132","line":13,"column":24,"nodeType":"126","messageId":"127","endLine":13,"endColumn":38},{"ruleId":"143","severity":1,"message":"151","line":28,"column":6,"nodeType":"145","endLine":28,"endColumn":8,"suggestions":"152"},{"ruleId":"124","severity":1,"message":"153","line":31,"column":11,"nodeType":"126","messageId":"127","endLine":31,"endColumn":22},{"ruleId":"124","severity":1,"message":"140","line":6,"column":11,"nodeType":"126","messageId":"127","endLine":6,"endColumn":22},{"ruleId":"143","severity":1,"message":"154","line":20,"column":6,"nodeType":"145","endLine":20,"endColumn":8,"suggestions":"155"},{"ruleId":"124","severity":1,"message":"133","line":9,"column":11,"nodeType":"126","messageId":"127","endLine":9,"endColumn":24},{"ruleId":"128","replacedBy":"156"},{"ruleId":"130","replacedBy":"157"},"no-unused-vars","'firebase' is defined but never used.","Identifier","unusedVar","no-native-reassign",["158"],"no-negated-in-lhs",["159"],"'setUserContext' is assigned a value but never used.","'globalContext' is assigned a value but never used.","'logo' is defined but never used.","'UserContext' is defined but never used.","'GlobalContextProvider' is defined but never used.",["158"],["159"],"'auth' is defined but never used.","'userContext' is assigned a value but never used.",["158"],["159"],"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'userContext.user.story'. Either include it or remove the dependency array.","ArrayExpression",["160"],["158"],["159"],"'useContext' is defined but never used.","'Header' is defined but never used.","React Hook React.useEffect has missing dependencies: 'getStories', 'globalContext.stories', and 'setGlobalContext'. Either include them or remove the dependency array.",["161"],"'accessToken' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'setUserContext'. Either include it or remove the dependency array.",["162"],["158"],["159"],"no-global-assign","no-unsafe-negation",{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},"Update the dependencies array to be: [userContext.user.story]",{"range":"169","text":"170"},"Update the dependencies array to be: [getStories, globalContext.stories, setGlobalContext]",{"range":"171","text":"172"},"Update the dependencies array to be: [setUserContext]",{"range":"173","text":"174"},[698,700],"[userContext.user.story]",[1149,1151],"[getStories, globalContext.stories, setGlobalContext]",[571,573],"[setUserContext]"]
[{"D:\\projects\\browser-stories\\browser-stories-extension\\src\\App.js":"1","D:\\projects\\browser-stories\\browser-stories-extension\\src\\constants\\pages.js":"2","D:\\projects\\browser-stories\\browser-stories-extension\\src\\services\\firebase.js":"3","D:\\projects\\browser-stories\\browser-stories-extension\\src\\containers\\Auth\\Auth.container.jsx":"4","D:\\projects\\browser-stories\\browser-stories-extension\\src\\containers\\Home\\Home.container.jsx":"5","D:\\projects\\browser-stories\\browser-stories-extension\\src\\helpers\\auth.js":"6","D:\\projects\\browser-stories\\browser-stories-extension\\src\\components\\GoogleSigninBtn\\GoogleSigninBtn.component.jsx":"7","D:\\projects\\browser-stories\\browser-stories-extension\\src\\index.js":"8","D:\\projects\\browser-stories\\browser-stories-extension\\src\\context\\globalContext.js":"9","D:\\projects\\browser-stories\\browser-stories-extension\\src\\components\\SetUser\\SetUser.component.jsx":"10","D:\\projects\\browser-stories\\browser-stories-extension\\src\\components\\Header\\Header.component.jsx":"11","D:\\projects\\browser-stories\\browser-stories-extension\\src\\containers\\About\\About.container.jsx":"12","D:\\projects\\browser-stories\\browser-stories-extension\\src\\services\\axios.js":"13","D:\\projects\\browser-stories\\browser-stories-extension\\src\\components\\StoryIcon\\StoryIcon.component.jsx":"14","D:\\projects\\browser-stories\\browser-stories-extension\\src\\context\\userContext.js":"15","D:\\projects\\browser-stories\\browser-stories-extension\\src\\components\\Loader\\Loader.compoent.jsx":"16","D:\\projects\\browser-stories\\browser-stories-extension\\src\\reportWebVitals.js":"17","D:\\projects\\browser-stories\\browser-stories-extension\\src\\containers\\CreateStory\\CreateStory.container.jsx":"18","D:\\projects\\browser-stories\\browser-stories-extension\\src\\constants\\storyColors.js":"19","D:\\projects\\browser-stories\\browser-stories-extension\\src\\containers\\CreateStory\\bgColorChanger\\bgColorChanger.component.jsx":"20","D:\\projects\\browser-stories\\browser-stories-extension\\src\\containers\\Profile\\Profile.container.jsx":"21","D:\\projects\\browser-stories\\browser-stories-extension\\src\\components\\Profile\\Profile.component.jsx":"22","D:\\projects\\browser-stories\\browser-stories-extension\\src\\containers\\ViewStory\\ViewStory.container.jsx":"23","D:\\projects\\browser-stories\\browser-stories-extension\\src\\components\\Backdrop\\Backdrop.component.jsx":"24","D:\\projects\\browser-stories\\browser-stories-extension\\src\\containers\\ViewStory\\ProfileDropDown\\ProfileDropDown.component.jsx":"25","D:\\projects\\browser-stories\\browser-stories-extension\\src\\components\\Arrow\\Arrow.component.jsx":"26"},{"size":1916,"mtime":1618041810000,"results":"27","hashOfConfig":"28"},{"size":179,"mtime":1617521342000,"results":"29","hashOfConfig":"28"},{"size":1049,"mtime":1611495836000,"results":"30","hashOfConfig":"28"},{"size":1553,"mtime":1615489860000,"results":"31","hashOfConfig":"28"},{"size":4693,"mtime":1617520628000,"results":"32","hashOfConfig":"28"},{"size":1053,"mtime":1611828808000,"results":"33","hashOfConfig":"28"},{"size":4472,"mtime":1617791304000,"results":"34","hashOfConfig":"28"},{"size":744,"mtime":1611427224000,"results":"35","hashOfConfig":"28"},{"size":603,"mtime":1611686188000,"results":"36","hashOfConfig":"28"},{"size":625,"mtime":1611682280000,"results":"37","hashOfConfig":"28"},{"size":3987,"mtime":1617873892000,"results":"38","hashOfConfig":"28"},{"size":1809,"mtime":1615311702000,"results":"39","hashOfConfig":"28"},{"size":338,"mtime":1611828386000,"results":"40","hashOfConfig":"28"},{"size":1513,"mtime":1617618248000,"results":"41","hashOfConfig":"28"},{"size":679,"mtime":1611677900000,"results":"42","hashOfConfig":"28"},{"size":175,"mtime":1611556052000,"results":"43","hashOfConfig":"28"},{"size":362,"mtime":1611127282000,"results":"44","hashOfConfig":"28"},{"size":3651,"mtime":1618042192000,"results":"45","hashOfConfig":"28"},{"size":406,"mtime":1617440272000,"results":"46","hashOfConfig":"28"},{"size":673,"mtime":1617455422000,"results":"47","hashOfConfig":"28"},{"size":3017,"mtime":1618040706000,"results":"48","hashOfConfig":"28"},{"size":4664,"mtime":1618042478000,"results":"49","hashOfConfig":"28"},{"size":2865,"mtime":1618043672000,"results":"50","hashOfConfig":"28"},{"size":224,"mtime":1617785310000,"results":"51","hashOfConfig":"28"},{"size":687,"mtime":1618043884000,"results":"52","hashOfConfig":"28"},{"size":245,"mtime":1618043862000,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},"1s6hrkr",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"59"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"101"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\projects\\browser-stories\\browser-stories-extension\\src\\App.js",["122","123","124","125"],"import React from \"react\";\n\nimport logo from \"./logo.svg\";\n\n\nimport \"./App.css\";\nimport \"./css/colors.css\"\nimport \"./css/typography.css\"\nimport \"./css/layout.css\"\nimport \"./css/buttons.css\"\nimport \"./css/animations.css\"\nimport \"./css/inputs.css\"\n\nimport Header from \"./components/Header/Header.component\";\nimport Auth from \"./containers/Auth/Auth.container\";\nimport Home from \"./containers/Home/Home.container\";\nimport About from \"./containers/About/About.container\";\nimport Profile from \"./containers/Profile/Profile.container\";\nimport CreateStory from \"./containers/CreateStory/CreateStory.container\";\nimport ViewStory from \"./containers/ViewStory/ViewStory.container\";\nimport pages from \"./constants/pages\";\nimport firebase from \"./services/firebase\";\nimport Loader from \"./components/Loader/Loader.compoent\";\nimport SetUser from \"./components/SetUser/SetUser.component\";\n\nimport { UserContext } from \"./context/userContext\";\nimport { GlobalContext, GlobalContextProvider } from \"./context/globalContext\";\nfunction App() {\n  React.useEffect(() => {\n    const user = firebase.auth().currentUser;\n  }, []);\n  const { globalContext } = React.useContext(GlobalContext);\n  const renderPage = () => {\n    const currentPage = globalContext.currentPage;\n    switch (currentPage) {\n      case pages.Home:\n        return <Home />;\n      case pages.Auth:\n        return <Auth />;\n      case pages.About:\n        return <About />;\n      case pages.CreateStory:\n        return <CreateStory />;\n      case pages.ViewStory:\n        return <ViewStory />;\n      case pages.Profile:\n        return <Profile />;\n      default:\n        return <Home />;\n    }\n  };\n  return (\n    <div className=\"App\">\n      <SetUser />\n      {/* <Header /> */}\n      {globalContext.currentPage === pages.ViewStory ? \"\" : <Header />}\n      {globalContext.loading && <Loader />}\n      <main>{renderPage()}</main>\n    </div>\n  );\n}\n\nexport default App;\n","D:\\projects\\browser-stories\\browser-stories-extension\\src\\constants\\pages.js",[],["126","127"],"D:\\projects\\browser-stories\\browser-stories-extension\\src\\services\\firebase.js",[],"D:\\projects\\browser-stories\\browser-stories-extension\\src\\containers\\Auth\\Auth.container.jsx",["128"],"D:\\projects\\browser-stories\\browser-stories-extension\\src\\containers\\Home\\Home.container.jsx",["129","130","131","132"],"import React, { useContext } from \"react\";\r\n\r\nimport axios from \"../../services/axios\";\r\nimport Header from \"../../components/Header/Header.component\";\r\nimport sytles from \"./Home.module.css\";\r\nimport StoryIcon from \"../../components/StoryIcon/StoryIcon.component\";\r\nimport { GlobalContext } from \"../../context/globalContext\";\r\nimport { UserContext } from \"../../context/userContext\";\r\nimport { getAccessToken } from \"../../helpers/auth\";\r\n\r\nconst Home = (props) => {\r\n  const { globalContext, setGlobalContext } = React.useContext(GlobalContext);\r\n  const { userContext, setUserContext } = React.useContext(UserContext);\r\n  const [message, setMessage] = React.useState(null);\r\n\r\n  React.useEffect(() => {\r\n    let localUser = JSON.parse(localStorage.getItem(\"user\"));\r\n    if (globalContext.stories.length === 0) {\r\n      if(localUser && localUser.themeId){\r\n\r\n        setUserContext((prev) => ({ ...prev, user: {...prev.user, themeId: localUser.themeId} }));\r\n      }\r\n      getStories();\r\n    } else {\r\n      if (localUser && localUser.email) {\r\n        const storiesToSave = globalContext.stories.filter((e) => {\r\n          return e._fieldsProto.email.stringValue !== localUser.email;\r\n        });\r\n        setGlobalContext((prev) => ({ ...prev, stories: storiesToSave }));\r\n      }\r\n    }\r\n  }, []);\r\n  const getStories = async () => {\r\n    setGlobalContext((prev) => ({ ...prev, loading: true }));\r\n    const accessToken = await getAccessToken();\r\n    axios\r\n      .post(\"/getStories\", {\r\n        offsetEmail:\r\n          (globalContext.stories &&\r\n            globalContext.stories.length > 0 &&\r\n            globalContext.stories[globalContext.stories.length - 1]._fieldsProto\r\n              .email.stringValue) ||\r\n          \"\",\r\n      })\r\n      .then((res) => {\r\n        const storyData = res.data.data;\r\n        const limit = storyData.length;\r\n        const offset = globalContext.currentStoriesOffset + limit;\r\n        if (!res.data.data) {\r\n          if (res.data.error) {\r\n            setMessage(res.data.error.msg);\r\n          } else {\r\n            setMessage(\"something went wrong\");\r\n          }\r\n          setGlobalContext((prev) => ({\r\n            ...prev,\r\n            loading: false,\r\n          }));\r\n        } else {\r\n          let localUser = JSON.parse(localStorage.getItem(\"user\"));\r\n          const storiesToSave = res.data.data.filter((e) => {\r\n            return (\r\n              e._fieldsProto.email.stringValue !==\r\n              (localUser && localUser.email)\r\n            );\r\n          });\r\n          if (globalContext.stories.length > 0) {\r\n            setGlobalContext((prev) => ({\r\n              ...prev,\r\n              loading: false,\r\n              stories: [...prev.stories, ...storiesToSave],\r\n              currentStoriesLimit: limit,\r\n              currentStoriesOffset: offset,\r\n            }));\r\n          } else {\r\n            setGlobalContext((prev) => ({\r\n              ...prev,\r\n              loading: false,\r\n              stories: storiesToSave,\r\n              currentStoriesLimit: limit,\r\n              currentStoriesOffset: offset,\r\n            }));\r\n          }\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setGlobalContext((prev) => ({ ...prev, loading: false }));\r\n        console.log(err);\r\n      });\r\n  };\r\n  const renderStories = () => {\r\n    const stories = globalContext.stories || [];\r\n     let delay = 1;\r\n    const storiesCards = stories.map((e, i) => {\r\n      const story = e._fieldsProto;\r\n      if(i%5 === 0){\r\n        delay++\r\n      }\r\n      console.log({delay}, i%3 === 0)\r\n      return (\r\n        <StoryIcon\r\n        className={`animate--slide-up a-delay-${delay}`}\r\n          key={i}\r\n          title={story.name.stringValue}\r\n          photoUrl={story.photoUrl.stringValue}\r\n          index={i}\r\n        />\r\n      );\r\n    });\r\n    return storiesCards;\r\n  };\r\n  return (\r\n    <div>\r\n      <div className={sytles.container}>\r\n        {userContext.user.email && (\r\n          <StoryIcon\r\n            title=\"Your Story\"\r\n            yourStory={true}\r\n            photoUrl={userContext.user.profilePicture}\r\n          />\r\n        )}\r\n        {globalContext.loading && globalContext.stories.length === 0 ? (\r\n          <div></div>\r\n        ) : (\r\n          renderStories()\r\n        )}\r\n        {globalContext.currentStoriesLimit >= 30 && (\r\n          <div className=\"text-center\">\r\n            <button className=\"btn-tertiary\" onClick={getStories}>\r\n              Load more\r\n            </button>\r\n          </div>\r\n        )}\r\n        {message && (\r\n          <p className=\"text-secondary font-small text-center\">{message}</p>\r\n        )}\r\n        {/*  */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","D:\\projects\\browser-stories\\browser-stories-extension\\src\\helpers\\auth.js",[],["133","134"],"D:\\projects\\browser-stories\\browser-stories-extension\\src\\components\\GoogleSigninBtn\\GoogleSigninBtn.component.jsx",["135","136","137"],"import React from \"react\";\r\n\r\nimport google_logo from \"../../images/google_logo.png\";\r\nimport styles from \"./GoogleSigninBtn.module.css\";\r\nimport { signInWithGoogle, auth } from \"../../services/firebase\";\r\nimport { UserContext } from \"../../context/userContext\";\r\nimport { GlobalContext } from \"../../context/globalContext\";\r\nimport pages from \"../../constants/pages\";\r\nimport axios from \"../../services/axios\";\r\n\r\nconst GoogleSigninBtn = (props) => {\r\n  const { userContext, setUserContext } = React.useContext(UserContext);\r\n  const { globalContext, setGlobalContext } = React.useContext(GlobalContext);\r\n  const onSigninClick = async () => {\r\n    try {\r\n      setGlobalContext((prev) => ({ ...prev, loading: true }));\r\n      const googleRes = await signInWithGoogle();\r\n      const googleResJson = JSON.parse(JSON.stringify(googleRes.user));\r\n      const refreshToken = googleResJson.stsTokenManager.refreshToken;\r\n      const idToken = googleResJson.stsTokenManager.accessToken;\r\n      const apiKey = googleResJson.stsTokenManager.apiKey;\r\n      const idExp = googleResJson.stsTokenManager.expirationTime;\r\n      localStorage.setItem(\"id-token\", idToken);\r\n      localStorage.setItem(\"id-exp\", idExp);\r\n      localStorage.setItem(\"r\", refreshToken);\r\n      localStorage.setItem(\"ak\", apiKey);\r\n      let userData = await axios.get(\"/getUser\", {\r\n        headers: {\r\n          Authorization: idToken,\r\n        },\r\n      });\r\n      if (userData.data) {\r\n        let userDataJson = userData.data.data._fieldsProto;\r\n        if (!userDataJson) {\r\n          setUserContext((prev) => ({\r\n            ...prev,\r\n            user: {\r\n              ...prev.user,\r\n              name: googleResJson.displayName,\r\n              email: googleResJson.email,\r\n              profilePicture: googleResJson.photoUrl,\r\n              story: \"\",\r\n              themeId: 0,\r\n              bio: \"\",\r\n              twitterHandle: \"\",\r\n              instagramHandle: \"\",\r\n            },\r\n          }));\r\n          localStorage.setItem(\r\n            \"user\",\r\n            JSON.stringify({\r\n              name: googleResJson.displayName,\r\n              email: googleResJson.email,\r\n              profilePicture: googleResJson.photoUrl,\r\n              story: \"\",\r\n              themeId: 0,\r\n              bio: \"\",\r\n              twitterHandle: \"\",\r\n              instagramHandle: \"\",\r\n            })\r\n          );\r\n        } else {\r\n          setUserContext((prev) => ({\r\n            ...prev,\r\n            user: {\r\n              ...prev.user,\r\n              name: userDataJson.name.stringValue,\r\n              email: userDataJson.email.stringValue,\r\n              profilePicture: userDataJson.photoUrl.stringValue,\r\n              story: userDataJson.story.stringValue,\r\n              themeId: (userDataJson.themeId && userDataJson.themeId.stringValue) || 0,\r\n              bio: (userDataJson.bio && userDataJson.bio.stringValue) || \"\",\r\n              twitterHandle: (userDataJson.twitterHandle && userDataJson.twitterHandle.stringValue) || \"\",\r\n              instagramHandle: (userDataJson.instagramHandle && userDataJson.instagramHandle.stringValue) || \"\",\r\n\r\n            },\r\n          }));\r\n          localStorage.setItem(\r\n            \"user\",\r\n            JSON.stringify({\r\n              name: userDataJson.name.stringValue,\r\n              email: userDataJson.email.stringValue,\r\n              profilePicture: userDataJson.photoUrl.stringValue,\r\n              story: userDataJson.story.stringValue,\r\n              themeId: (userDataJson.themeId && userDataJson.themeId.stringValue) || 0,\r\n              bio: (userDataJson.bio && userDataJson.bio.stringValue) || \"\",\r\n              twitterHandle: (userDataJson.twitterHandle && userDataJson.twitterHandle.stringValue) || \"\",\r\n              instagramHandle: (userDataJson.instagramHandle && userDataJson.instagramHandle.stringValue) || \"\",\r\n            })\r\n          );\r\n        }\r\n      }\r\n      setGlobalContext((prev) => ({\r\n        ...prev,\r\n        loading: false,\r\n        currentPage: pages.Home,\r\n      }));\r\n    } catch (err) {\r\n      setGlobalContext((prev) => ({ ...prev, loading: false }));\r\n      console.log(err);\r\n    }\r\n  };\r\n  return (\r\n    <div {...props} className={`${styles.button} click-effect`} onClick={onSigninClick}>\r\n      <img className={`${styles.logo}`} src={google_logo} alt=\"google signin\" />\r\n      <p className={`${styles.text}`}>Sign in with Google</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GoogleSigninBtn;\r\n","D:\\projects\\browser-stories\\browser-stories-extension\\src\\index.js",[],["138","139"],"D:\\projects\\browser-stories\\browser-stories-extension\\src\\context\\globalContext.js",["140"],"import React from \"react\";\r\nimport pages from \"../constants/pages\";\r\nimport firebase from \"../services/firebase\";\r\n\r\nexport const GlobalContext = React.createContext();\r\n\r\nexport const GlobalContextProvider = (props) => {\r\n  const [globalContext, setGlobalContext] = React.useState({\r\n    currentPage: pages.Home,\r\n    loading: false,\r\n    stories: [],\r\n    currentStoryIndex: null,\r\n    currentStoriesOffset: 0,\r\n    currentStoriesLimit: 0,\r\n  });\r\n\r\n  return (\r\n    <GlobalContext.Provider value={{ globalContext, setGlobalContext }}>\r\n      {props.children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};\r\n","D:\\projects\\browser-stories\\browser-stories-extension\\src\\components\\SetUser\\SetUser.component.jsx",["141","142"],"import React from \"react\";\r\n\r\nimport { UserContext } from \"../../context/userContext\";\r\n\r\nconst SetUser = () => {\r\n  const { userContext, setUserContext } = React.useContext(UserContext);\r\n  React.useEffect(() => {\r\n    const userExists = JSON.parse(localStorage.getItem(\"user\"));\r\n    if (userExists) {\r\n      setUserContext((prev) => ({\r\n        ...prev,\r\n        user: {\r\n          name: userExists.name,\r\n          email: userExists.email,\r\n          profilePicture: userExists.profilePicture,\r\n          story: userExists.story,\r\n        },\r\n      }));\r\n    }\r\n  }, []);\r\n  return <></>;\r\n};\r\n\r\nexport default SetUser;\r\n",["143","144"],"D:\\projects\\browser-stories\\browser-stories-extension\\src\\components\\Header\\Header.component.jsx",["145","146"],"import React from \"react\";\r\n\r\nimport { UserContext } from \"../../context/userContext\";\r\nimport { GlobalContext } from \"../../context/globalContext\";\r\nimport logo from \"../../images/logos/logo_100x100.png\";\r\nimport styles from \"./Header.module.css\";\r\nimport pages from \"../../constants/pages\";\r\n\r\nconst Header = (props) => {\r\n  const { userContext, setUserContext, resetUserContext } = React.useContext(\r\n    UserContext\r\n  );\r\n  const [menuActive, setMenuActive] = React.useState(false);\r\n  const { globalContext, setGlobalContext } = React.useContext(GlobalContext);\r\n  React.useEffect(() => {\r\n    setMenuActive(false);\r\n  }, []);\r\n\r\n  const onLoginClick = () => {\r\n    setGlobalContext((prev) => ({ ...prev, currentPage: pages.Auth }));\r\n  };\r\n  const handleMenuOpen = () => {\r\n    setMenuActive((prev) => !prev);\r\n    // setGlobalContext((prev) => ({ ...prev, currentPage: pages.CreateStory }));\r\n  };\r\n  const logout = () => {\r\n    setGlobalContext((prev) => ({ ...prev, currentPage: pages.HOME }));\r\n    const localUser = JSON.parse(localStorage.getItem(\"user\"));\r\n    if (localUser && localUser.story) {\r\n      const storiesToSave = {\r\n        _fieldsProto: {\r\n          email: {\r\n            stringValue: localUser.email,\r\n          },\r\n          name: {\r\n            stringValue: localUser.name,\r\n          },\r\n          photoUrl: {\r\n            stringValue: localUser.profilePicture,\r\n          },\r\n          story: {\r\n            stringValue: localUser.story,\r\n          },\r\n        },\r\n      };\r\n      setGlobalContext((prev) => ({\r\n        ...prev,\r\n        stories: [...prev.stories, storiesToSave],\r\n      }));\r\n    }\r\n    localStorage.removeItem(\"user\");\r\n    localStorage.removeItem(\"id-token\");\r\n    localStorage.removeItem(\"r\");\r\n    localStorage.removeItem(\"id-exp\");\r\n    resetUserContext();\r\n  };\r\n  const userProfilePicture = userContext.user.profilePicture;\r\n  return (\r\n    <header className={`flex flex-space-between flex-center ${styles.header}`}>\r\n      <div className={`flex flex-center  pl-5`}>\r\n        <img src={logo} alt=\"logo\" className={`${styles.logo}`} />\r\n        <div className={`ml-5`}>\r\n          <h3 className={`${styles.heading} text-secondary `}>Stories</h3>\r\n          {/* <p className=\"text-small\">\r\n            Create by <a href=\"https://twitter.com/_syed_zubair\">Zubair</a>\r\n          </p> */}\r\n        </div>\r\n      </div>\r\n      <div className=\"pr-5\">\r\n        <div className={` menu-wrapper`}>\r\n          <ul className={` ${menuActive ? \"active\" : \"\"} menu-list animate--slide-up`}>\r\n            {userProfilePicture && (\r\n              <li\r\n                onClick={() => {\r\n                  setMenuActive((prev) => !prev);\r\n                  setGlobalContext((prev) => ({\r\n                    ...prev,\r\n                    currentPage: pages.Profile,\r\n                  }));\r\n                }}\r\n              >\r\n                Profile\r\n              </li>\r\n            )}\r\n            <li\r\n              onClick={() => {\r\n                setMenuActive((prev) => !prev);\r\n                setGlobalContext((prev) => ({\r\n                  ...prev,\r\n                  currentPage: pages.About,\r\n                }));\r\n              }}\r\n            >\r\n              About\r\n            </li>\r\n            {userProfilePicture && <li onClick={logout}>Logout</li>}\r\n          </ul>\r\n          {userProfilePicture ? (\r\n            <img\r\n              className={`${styles.profilePicture}`}\r\n              src={userProfilePicture}\r\n              alt=\"profile\"\r\n              onClick={handleMenuOpen}\r\n            />\r\n          ) : (\r\n            <div className={`flex align-center`}>\r\n              <div className={`btn-tertiary mr-5`} onClick={onLoginClick}>\r\n                Login\r\n              </div>\r\n              <span className={styles.menuIcon} onClick={handleMenuOpen}>\r\n                &#8942;\r\n              </span>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","D:\\projects\\browser-stories\\browser-stories-extension\\src\\containers\\About\\About.container.jsx",["147"],"D:\\projects\\browser-stories\\browser-stories-extension\\src\\services\\axios.js",[],["148","149"],"D:\\projects\\browser-stories\\browser-stories-extension\\src\\components\\StoryIcon\\StoryIcon.component.jsx",["150"],"import React from \"react\";\r\n\r\nimport styles from \"./StoryIcon.module.css\";\r\nimport pages from \"../../constants/pages\";\r\nimport { GlobalContext } from \"../../context/globalContext\";\r\n\r\nconst StoryIcon = (props) => {\r\n  const [storyLoading, setStoryLoading] = React.useState(false);\r\n  const { globalContext, setGlobalContext } = React.useContext(GlobalContext);\r\n  let { photoUrl, title, index } = props;\r\n  title = props.yourStory ? title : title.split(\" \")[0];\r\n\r\n  const handleStoryClick = () => {\r\n    if (props.yourStory) {\r\n      setGlobalContext((prev) => ({ ...prev, currentPage: pages.CreateStory }));\r\n    } else {\r\n      setStoryLoading(true);\r\n      // setTimeout(() => {\r\n        setGlobalContext((prev) => ({\r\n          ...prev,\r\n          currentStoryIndex: index,\r\n          currentPage: pages.ViewStory,\r\n        }));\r\n      // }, 500);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <div\r\n        className={`text-center inline-block click-effect ${styles.container} ${props.className}`}\r\n        onClick={handleStoryClick}\r\n      >\r\n        <div className=\"click-effect\">\r\n          <div\r\n            className={`${styles.imageWrapper} ${\r\n              storyLoading ? styles.loading : \"\"\r\n            } ${props.yourStory ? styles.yourStoryWrapper : \"\"}`}\r\n          >\r\n            <img className={`${styles.image}`} src={photoUrl} alt=\"profile\" />\r\n          </div>\r\n          <p className={`${styles.title}`}>{title}</p>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StoryIcon;\r\n",["151","152"],"D:\\projects\\browser-stories\\browser-stories-extension\\src\\context\\userContext.js",[],"D:\\projects\\browser-stories\\browser-stories-extension\\src\\components\\Loader\\Loader.compoent.jsx",[],"D:\\projects\\browser-stories\\browser-stories-extension\\src\\reportWebVitals.js",[],["153","154"],"D:\\projects\\browser-stories\\browser-stories-extension\\src\\containers\\CreateStory\\CreateStory.container.jsx",["155","156"],"import React from \"react\";\r\n\r\nimport axios from \"../../services/axios\";\r\nimport styles from \"./CreateStory.module.css\";\r\nimport { GlobalContext } from \"../../context/globalContext\";\r\nimport { UserContext } from \"../../context/userContext\";\r\nimport pages from \"../../constants/pages\";\r\nimport { getAccessToken } from \"../../helpers/auth\";\r\nimport storyColors from '../../constants/storyColors';\r\nimport BgColorChanger from \"./bgColorChanger/bgColorChanger.component\";\r\n\r\nconst CreateStory = (props) => {\r\n  const textareaRef = React.useRef();\r\n  const { userContext, setUserContext } = React.useContext(UserContext);\r\n  const [storyText, setStoryText] = React.useState(\"\");\r\n  const [colorClass, setColorClass] = React.useState(0);\r\n  React.useEffect(() => {\r\n    if (userContext.user.story) {\r\n      setStoryText(userContext.user.story);\r\n    }\r\n    if (userContext.user.themeId) {\r\n      setColorClass( Number(userContext.user.themeId));\r\n    }\r\n    textareaRef.current.focus();\r\n  }, []);\r\n  const { globalContext, setGlobalContext } = React.useContext(GlobalContext);\r\n\r\n  const handleTextChange = (e) => {\r\n    const text = e.target.value;\r\n    if (text.length < 300) {\r\n      setStoryText(text);\r\n    }\r\n  };\r\n  const handlePostStory = async (e) => {\r\n    setGlobalContext((prev) => ({ ...prev, loading: true }));\r\n    const accessToken = await getAccessToken();\r\n    const text = storyText;\r\n    axios\r\n      .post(\r\n        \"/createStory\",\r\n        { text: text, themeId: colorClass.toString() },\r\n        { headers: { Authorization: accessToken } }\r\n      )\r\n      .then((res) => {\r\n        setGlobalContext((prev) => ({\r\n          ...prev,\r\n          loading: false,\r\n          currentPage: pages.Home,\r\n        }));\r\n        const localUser = JSON.parse(localStorage.getItem(\"user\"));\r\n        if (localUser) {\r\n          localStorage.setItem(\r\n            \"user\",\r\n            JSON.stringify({ ...localUser, story: storyText, themeId: colorClass.toString() })\r\n          );\r\n        }\r\n        setUserContext((prev) => ({\r\n          ...prev,\r\n          user: { ...prev.user, story: storyText, themeId: colorClass.toString() },\r\n        }));\r\n      })\r\n      .catch((err) => {\r\n        setGlobalContext((prev) => ({ ...prev, loading: false }));\r\n      });\r\n  };\r\n  const handleloseBtnClick = () => {\r\n    setGlobalContext((prev) => ({ ...prev, currentPage: pages.Home }));\r\n  };\r\n  const changeBackground = () => {\r\n    if(colorClass < storyColors.length -1){\r\n\r\n      setColorClass(prev => prev + 1)\r\n    }else {\r\n      setColorClass(0)\r\n    }\r\n  }\r\n  return (\r\n    <div className={`${styles.container} overflow-hidden ${\"storyColor\" + colorClass}`}>\r\n      <div\r\n        className={`${styles.header} flex flex-space-between pt-10 pl-10 pr-10 pb-10  animate--slide-up`}\r\n      >\r\n        <button\r\n          className={`btn-tertiary closeBtn`}\r\n          onClick={handleloseBtnClick}\r\n        >\r\n          <div className={`btn-tertiary close`}></div>\r\n        </button>\r\n        <div className=\"flex\">\r\n          <BgColorChanger onClick={changeBackground} currentColorId={colorClass} />\r\n          <button className=\"btn-primary ml-10 click-effect\" onClick={handlePostStory}>\r\n            Post\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className={`pl-10 pr-10 animate--slide-up a-delay-1`}>\r\n        <textarea\r\n          type=\"text\"\r\n          rows=\"14\"\r\n          ref={textareaRef}\r\n          placeholder=\"Type something...\"\r\n          value={storyText}\r\n          onChange={handleTextChange}\r\n          className={`${styles.storyInput}`}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateStory;\r\n","D:\\projects\\browser-stories\\browser-stories-extension\\src\\constants\\storyColors.js",[],"D:\\projects\\browser-stories\\browser-stories-extension\\src\\containers\\CreateStory\\bgColorChanger\\bgColorChanger.component.jsx",["157"],"import React from \"react\";\r\n\r\nimport styles from \"./bgColorChanger.module.css\";\r\nimport storyColors from \"../../../constants/storyColors\";\r\n\r\nconst BgColorChanger = (props) => {\r\n  const { currentColorId, ...remainingProps } = props || {};\r\n//   const {themeId, setThemeId} = React.useState(0);\r\n//   React.useEffect(() => {\r\n//     if(currentColorId){\r\n//         setThemeId(currentColorId === 5 ? 0 : currentColorId)\r\n//     }\r\n//   }, []);\r\n\r\n  return (\r\n    <div\r\n      className={` ${styles.container} ${\r\n        \"storyColor\" + currentColorId\r\n      } cursor-pointer click-effect`}\r\n      {...remainingProps}\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport default BgColorChanger;\r\n","D:\\projects\\browser-stories\\browser-stories-extension\\src\\containers\\Profile\\Profile.container.jsx",["158","159"],"D:\\projects\\browser-stories\\browser-stories-extension\\src\\components\\Profile\\Profile.component.jsx",["160","161","162"],"D:\\projects\\browser-stories\\browser-stories-extension\\src\\containers\\ViewStory\\ViewStory.container.jsx",[],"D:\\projects\\browser-stories\\browser-stories-extension\\src\\components\\Backdrop\\Backdrop.component.jsx",[],"D:\\projects\\browser-stories\\browser-stories-extension\\src\\containers\\ViewStory\\ProfileDropDown\\ProfileDropDown.component.jsx",[],"D:\\projects\\browser-stories\\browser-stories-extension\\src\\components\\Arrow\\Arrow.component.jsx",[],{"ruleId":"163","severity":1,"message":"164","line":3,"column":8,"nodeType":"165","messageId":"166","endLine":3,"endColumn":12},{"ruleId":"163","severity":1,"message":"167","line":26,"column":10,"nodeType":"165","messageId":"166","endLine":26,"endColumn":21},{"ruleId":"163","severity":1,"message":"168","line":27,"column":25,"nodeType":"165","messageId":"166","endLine":27,"endColumn":46},{"ruleId":"163","severity":1,"message":"169","line":30,"column":11,"nodeType":"165","messageId":"166","endLine":30,"endColumn":15},{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","replacedBy":"173"},{"ruleId":"163","severity":1,"message":"174","line":10,"column":11,"nodeType":"165","messageId":"166","endLine":10,"endColumn":24},{"ruleId":"163","severity":1,"message":"175","line":1,"column":17,"nodeType":"165","messageId":"166","endLine":1,"endColumn":27},{"ruleId":"163","severity":1,"message":"176","line":4,"column":8,"nodeType":"165","messageId":"166","endLine":4,"endColumn":14},{"ruleId":"177","severity":1,"message":"178","line":32,"column":6,"nodeType":"179","endLine":32,"endColumn":8,"suggestions":"180"},{"ruleId":"163","severity":1,"message":"181","line":35,"column":11,"nodeType":"165","messageId":"166","endLine":35,"endColumn":22},{"ruleId":"170","replacedBy":"182"},{"ruleId":"172","replacedBy":"183"},{"ruleId":"163","severity":1,"message":"184","line":5,"column":28,"nodeType":"165","messageId":"166","endLine":5,"endColumn":32},{"ruleId":"163","severity":1,"message":"185","line":12,"column":11,"nodeType":"165","messageId":"166","endLine":12,"endColumn":22},{"ruleId":"163","severity":1,"message":"174","line":13,"column":11,"nodeType":"165","messageId":"166","endLine":13,"endColumn":24},{"ruleId":"170","replacedBy":"186"},{"ruleId":"172","replacedBy":"187"},{"ruleId":"163","severity":1,"message":"188","line":3,"column":8,"nodeType":"165","messageId":"166","endLine":3,"endColumn":16},{"ruleId":"163","severity":1,"message":"185","line":6,"column":11,"nodeType":"165","messageId":"166","endLine":6,"endColumn":22},{"ruleId":"177","severity":1,"message":"189","line":20,"column":6,"nodeType":"179","endLine":20,"endColumn":8,"suggestions":"190"},{"ruleId":"170","replacedBy":"191"},{"ruleId":"172","replacedBy":"192"},{"ruleId":"163","severity":1,"message":"193","line":10,"column":24,"nodeType":"165","messageId":"166","endLine":10,"endColumn":38},{"ruleId":"163","severity":1,"message":"174","line":14,"column":11,"nodeType":"165","messageId":"166","endLine":14,"endColumn":24},{"ruleId":"163","severity":1,"message":"174","line":9,"column":11,"nodeType":"165","messageId":"166","endLine":9,"endColumn":24},{"ruleId":"170","replacedBy":"194"},{"ruleId":"172","replacedBy":"195"},{"ruleId":"163","severity":1,"message":"174","line":9,"column":11,"nodeType":"165","messageId":"166","endLine":9,"endColumn":24},{"ruleId":"170","replacedBy":"196"},{"ruleId":"172","replacedBy":"197"},{"ruleId":"170","replacedBy":"198"},{"ruleId":"172","replacedBy":"199"},{"ruleId":"177","severity":1,"message":"200","line":25,"column":6,"nodeType":"179","endLine":25,"endColumn":8,"suggestions":"201"},{"ruleId":"163","severity":1,"message":"174","line":26,"column":11,"nodeType":"165","messageId":"166","endLine":26,"endColumn":24},{"ruleId":"163","severity":1,"message":"202","line":4,"column":8,"nodeType":"165","messageId":"166","endLine":4,"endColumn":19},{"ruleId":"163","severity":1,"message":"203","line":12,"column":40,"nodeType":"165","messageId":"166","endLine":12,"endColumn":56},{"ruleId":"163","severity":1,"message":"174","line":15,"column":11,"nodeType":"165","messageId":"166","endLine":15,"endColumn":24},{"ruleId":"163","severity":1,"message":"167","line":2,"column":10,"nodeType":"165","messageId":"166","endLine":2,"endColumn":21},{"ruleId":"163","severity":1,"message":"204","line":3,"column":10,"nodeType":"165","messageId":"166","endLine":3,"endColumn":23},{"ruleId":"177","severity":1,"message":"205","line":42,"column":6,"nodeType":"179","endLine":42,"endColumn":8,"suggestions":"206"},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'UserContext' is defined but never used.","'GlobalContextProvider' is defined but never used.","'user' is assigned a value but never used.","no-native-reassign",["207"],"no-negated-in-lhs",["208"],"'globalContext' is assigned a value but never used.","'useContext' is defined but never used.","'Header' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'getStories', 'globalContext.stories', 'setGlobalContext', and 'setUserContext'. Either include them or remove the dependency array.","ArrayExpression",["209"],"'accessToken' is assigned a value but never used.",["207"],["208"],"'auth' is defined but never used.","'userContext' is assigned a value but never used.",["207"],["208"],"'firebase' is defined but never used.","React Hook React.useEffect has a missing dependency: 'setUserContext'. Either include it or remove the dependency array.",["210"],["207"],["208"],"'setUserContext' is assigned a value but never used.",["207"],["208"],["207"],["208"],["207"],["208"],"React Hook React.useEffect has missing dependencies: 'userContext.user.story' and 'userContext.user.themeId'. Either include them or remove the dependency array.",["211"],"'storyColors' is defined but never used.","'resetUserContext' is assigned a value but never used.","'GlobalContext' is defined but never used.","React Hook React.useEffect has missing dependencies: 'props.bio', 'props.instagramHandle', and 'props.twitterHandle'. Either include them or remove the dependency array. If 'setForm' needs the current value of 'props.bio', you can also switch to useReducer instead of useState and read 'props.bio' in the reducer.",["212"],"no-global-assign","no-unsafe-negation",{"desc":"213","fix":"214"},{"desc":"215","fix":"216"},{"desc":"217","fix":"218"},{"desc":"219","fix":"220"},"Update the dependencies array to be: [getStories, globalContext.stories, setGlobalContext, setUserContext]",{"range":"221","text":"222"},"Update the dependencies array to be: [setUserContext]",{"range":"223","text":"224"},"Update the dependencies array to be: [userContext.user.story, userContext.user.themeId]",{"range":"225","text":"226"},"Update the dependencies array to be: [props.bio, props.instagramHandle, props.twitterHandle]",{"range":"227","text":"228"},[1301,1303],"[getStories, globalContext.stories, setGlobalContext, setUserContext]",[571,573],"[setUserContext]",[986,988],"[userContext.user.story, userContext.user.themeId]",[955,957],"[props.bio, props.instagramHandle, props.twitterHandle]"]